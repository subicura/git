(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{461:function(t,s,a){t.exports=a.p+"assets/img/github-flow.2fafce92.png"},462:function(t,s,a){t.exports=a.p+"assets/img/github-pr.7dc1933b.png"},463:function(t,s,a){t.exports=a.p+"assets/img/github-pr-2.3dbdb852.png"},464:function(t,s,a){t.exports=a.p+"assets/img/github-pr-3.809e556a.png"},465:function(t,s,a){t.exports=a.p+"assets/img/git-remote-push-vscode.7ea5eda2.png"},466:function(t,s,a){t.exports=a.p+"assets/img/git-remote-push-st.2e05fdce.png"},534:function(t,s,a){"use strict";a.r(s);var e=a(9),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"github-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-flow"}},[t._v("#")]),t._v(" GitHub Flow")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("⚡️ 목표")]),t._v(" "),e("p",[t._v("GitHub Flow를 이용한 협업 방식을 배웁니다.")])]),t._v(" "),e("p",[t._v("GitHub에서 제공하는 "),e("code",[t._v("Pull Request")]),t._v("와 "),e("code",[t._v("코드 리뷰")]),t._v("기능을 적극적으로 활용한 "),e("code",[t._v("GitHub Flow")]),t._v("방식을 알아보겠습니다.")]),t._v(" "),e("h2",{attrs:{id:"github-flow-방식"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-flow-방식"}},[t._v("#")]),t._v(" GitHub Flow 방식")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://guides.github.com/introduction/flow/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Flow"),e("OutboundLink")],1),t._v("는 GitHub에서 제안하는 프로젝트 관리방법입니다. 브랜치와 "),e("code",[t._v("Pull Request")]),t._v("(줄여서 PR)라는 개념을 사용합니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(461),alt:"github flow"}})]),t._v(" "),e("p",[t._v("다음과 같이 진행합니다.")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("rainbow")]),t._v(" 브랜치를 만든다.")]),t._v(" "),e("li",[t._v("rainbow 파일을 추가하고 커밋을 한다.")]),t._v(" "),e("li",[e("code",[t._v("rainbow")]),t._v(" 브랜치를 원격 저장소에 "),e("code",[t._v("Push")]),t._v("한다.")]),t._v(" "),e("li",[t._v("GitHub에서 푸시 된 "),e("code",[t._v("rainbow")]),t._v(" 브랜치를 "),e("code",[t._v("Pull Request")]),t._v("한다.")]),t._v(" "),e("li",[t._v("GitHub에서 코드리뷰를 한다.")]),t._v(" "),e("li",[t._v("GitHub에서 "),e("code",[t._v("Merge")]),t._v("한다.")]),t._v(" "),e("li",[t._v("로컬 저장소에서 원격 저장소에 머지된 내용을 "),e("code",[t._v("Pull")]),t._v("한다.")]),t._v(" "),e("li",[t._v("완료! 🎉")])]),t._v(" "),e("p",[e("strong",[t._v("실습")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" switch -c rainbow "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gsw -c rainbow")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" rainbow\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is rainbow"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" rainbow\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gaa")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add rainbow"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# gc -m "rainbow"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin rainbow "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gp origin rainbow")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Remote Branch")]),t._v(" "),e("p",[t._v("로컬 브랜치를 모두 원격 브랜치로 연동할 필요는 없습니다. 보통 로컬 브랜치에서 작업을 하다가 의미가 있다고 판단이 될 때 원격 저장소로 푸시하게 됩니다.")])]),t._v(" "),e("p",[e("strong",[t._v("확인")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Enumerating objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(", done.\nCounting objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("/7"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\nDelta compression using up to "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" threads\nCompressing objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("/4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\nWriting objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("/6"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("493")]),t._v(" bytes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("493.00")]),t._v(" KiB/s, done.\nTotal "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delta "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", reused "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delta "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", pack-reused "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nremote: Resolving deltas: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", completed with "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" object.\nremote:\nremote: Create a pull request "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rainbow'")]),t._v(" on GitHub by visiting:\nremote:      https://github.com/subicura-git/sample/pull/new/rainbow\nremote:\nTo https://github.com/subicura-git/sample.git\n * "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("new branch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("      rainbow -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" rainbow\n")])])]),e("p",[t._v("로그를 보면 친절하게 "),e("code",[t._v("https://github.com/subicura-git/sample/pull/new/rainbow")]),t._v(" "),e("code",[t._v("Pull Request")]),t._v("용 URL을 알려줍니다. 저 링크를 눌러도 되고 GitHub 저장소에 접속하면 다음과 같은 화면을 볼 수 있습니다.")]),t._v(" "),e("div",{staticClass:"image-600"},[e("p",[e("img",{attrs:{src:a(462),alt:"GitHub Repository"}})])]),t._v(" "),e("p",[t._v("원격 브랜치가 생성되면 자동으로 "),e("code",[t._v("Compare & pull request")]),t._v(" 버튼이 보입니다.")]),t._v(" "),e("div",{staticClass:"image-600"},[e("p",[e("img",{attrs:{src:a(463),alt:"GitHub Pull Request"}})])]),t._v(" "),e("p",[t._v("작업 내용을 간략하게 적고, 어떤 작업이 있었는지 변경내용을 확인 후 "),e("code",[t._v("Create Pull request")]),t._v(" 버튼을 클릭합니다.")]),t._v(" "),e("div",{staticClass:"image-600"},[e("p",[e("img",{attrs:{src:a(464),alt:"GitHub Pull Request"}})])]),t._v(" "),e("p",[t._v("짜잔! 드디어 첫 번째 PR이 열렸습니다. 🎉")]),t._v(" "),e("p",[t._v("이제 코드 리뷰를 진행(이거이거 이렇게 수정하는게 좋겠는데요? 라고 댓글을 답니다)하고 리뷰에 따라 코드를 수정하고 다시 "),e("code",[t._v("Push")]),t._v("하는 작업을 반복합니다. 다른 개발자와 코드리뷰를 하면서 소스코드를 더 자세히 이해하고 더 좋은 코드를 작성할 수 있습니다.")]),t._v(" "),e("p",[t._v("최종 리뷰가 완료되면 "),e("code",[t._v("Merge pull request")]),t._v(" 버튼을 누릅니다. 원격 저장소에서 해당 브랜치의 변경사항이 "),e("code",[t._v("main")]),t._v("브랜치에 머지됩니다.")]),t._v(" "),e("p",[t._v("아직 로컬 저장소는 GitHub에 머지된 내역이 보이지 않으므로 원격 저장소의 내용을 가져옵니다.")]),t._v(" "),e("p",[e("strong",[t._v("실습")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" switch main "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gsw main")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gl")]),t._v("\n")])])]),e("p",[e("strong",[t._v("확인")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Switched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'main'")]),t._v("\nYour branch is behind "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'origin/main'")]),t._v(" by "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" commits, and can be fast-forwarded.\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git pull"')]),t._v(" to update your "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" branch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nUpdating cdce49d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("4f82236\nFast-forward\n rainbow "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" +\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" insertion"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" rainbow\n")])])]),e("p",[t._v("최종 머지가 완료되었습니다. 👍")]),t._v(" "),e("h2",{attrs:{id:"gui-도구-사용하기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gui-도구-사용하기"}},[t._v("#")]),t._v(" GUI 도구 사용하기")]),t._v(" "),e("p",[t._v("지금까지 작업을 Visual Studio Code와 Sourcetree로 해보고 어떤 장점이 있는지 확인해 보겠습니다.")]),t._v(" "),e("p",[t._v("CLI로 로컬 브랜치를 원격 저장소에 푸시할 때 "),e("code",[t._v("git push origin [branch name]")]),t._v("을 입력했는데 이 명령어를 더 쉽게 사용해 보겠습니다.")]),t._v(" "),e("h3",{attrs:{id:"visual-studio-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#visual-studio-code"}},[t._v("#")]),t._v(" Visual Studio Code")]),t._v(" "),e("p",[e("img",{attrs:{src:a(465),alt:"github remote push"}})]),t._v(" "),e("p",[t._v("하단 브랜치명 오른쪽에 "),e("code",[t._v("Push")]),t._v(" 아이콘을 클릭하면 현재 브랜치가 원격 저장소로 푸시 됩니다. 끝!")]),t._v(" "),e("h3",{attrs:{id:"sourcetree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sourcetree"}},[t._v("#")]),t._v(" Sourcetree")]),t._v(" "),e("p",[e("img",{attrs:{src:a(466),alt:"github remote push"}})]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Push")]),t._v("를 선택하고 원격에 적용하고 싶은 브랜치를 체크한 다음 "),e("code",[t._v("OK")]),t._v(" 버튼을 클릭합니다. 끝!")])]),t._v(" "),e("h2",{attrs:{id:"그래서"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#그래서"}},[t._v("#")]),t._v(" 그래서")]),t._v(" "),e("p",[t._v("Git은 브랜치 기능을 제공하고 브랜치를 어떤식으로 사용할지는 개발자 마음입니다. GitHub Flow외에 "),e("a",{attrs:{href:"https://nvie.com/posts/a-successful-git-branching-model/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Flow"),e("OutboundLink")],1),t._v("나 "),e("a",{attrs:{href:"https://docs.gitlab.com/ee/topics/gitlab_flow.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab Flow"),e("OutboundLink")],1),t._v("가 있는데, 프로젝트나 팀의 상황에 맞게 적절한 방법을 선택하면 됩니다. GitHub Flow는 직관적이고 가볍기 때문에 널리 사용되고 있습니다.")])])}),[],!1,null,null,null);s.default=n.exports}}]);