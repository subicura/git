(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{449:function(t,s,a){t.exports=a.p+"assets/img/git-switch-create-vscode.493aa6ae.png"},450:function(t,s,a){t.exports=a.p+"assets/img/git-switch-vscode.099db29c.png"},451:function(t,s,a){t.exports=a.p+"assets/img/git-merge-vscode.7642b6cb.png"},452:function(t,s,a){t.exports=a.p+"assets/img/git-conflict-vscode-1.d58a7e3c.png"},453:function(t,s,a){t.exports=a.p+"assets/img/git-conflict-vscode-2.a2b4d202.png"},454:function(t,s,a){t.exports=a.p+"assets/img/git-switch-create-st-1.f40c427f.png"},455:function(t,s,a){t.exports=a.p+"assets/img/git-switch-create-st-2.0cc79c05.png"},456:function(t,s,a){t.exports=a.p+"assets/img/git-switch-st.50cf1137.png"},457:function(t,s,a){t.exports=a.p+"assets/img/git-merge-st.606d37af.png"},458:function(t,s,a){t.exports=a.p+"assets/img/git-conflict-st-1.9fc8a697.png"},459:function(t,s,a){t.exports=a.p+"assets/img/git-conflict-st-2.ae476956.png"},460:function(t,s,a){t.exports=a.p+"assets/img/git-conflict-st-3.3f49664b.png"},530:function(t,s,a){"use strict";a.r(s);var e=a(9),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"작업-분기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#작업-분기"}},[t._v("#")]),t._v(" 작업 분기")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("⚡️ 목표")]),t._v(" "),e("p",[t._v("브랜치 기능을 이용하여 동시에 여러 작업을 진행하고 합치고 충돌을 해결하는 방법을 알아봅니다.")])]),t._v(" "),e("p",[t._v("Git은 강력한 브랜치 기능을 이용하여 비선형적인 개발이 가능합니다."),e("br"),t._v("\n한 작업이 끝나고 다음 작업을 진행한 다음, 그 작업이 끝난 후 그다음 작업을 하는 것이 아니라 동시에 여러 작업을 진행하고 최종적으로 합치는 과정을 자연스럽게 할 수 있습니다."),e("br"),t._v("\n그 과정에서 동일한 파일을 수정하면 충돌이 발생하고 그 충돌을 해결하는 과정에서 첫 번째 난관이 발생하는데 😭 협업을 하려면 반드시 거쳐야 하는 작업입니다.")]),t._v(" "),e("p",[t._v("앞에서 실습한 브랜치는 "),e("code",[t._v("main")]),t._v(" 브랜치입니다. "),e("code",[t._v("main")]),t._v(" 브랜치에서 새로운 브랜치를 만들면서 작업할 예정입니다. 브랜치는 고유의 작업 공간을 가지고 있기 때문에 서로 영향을 받지 않고 빠르게 브랜치를 전환할 수 있습니다. 특정 브랜치의 작업이 완료되면 수정 사항을 다른 브랜치에 합칠 수 있습니다.")]),t._v(" "),e("h2",{attrs:{id:"git-switch-c-브랜치-생성"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-switch-c-브랜치-생성"}},[t._v("#")]),t._v(" git switch -c - 브랜치 생성")]),t._v(" "),e("usage",{attrs:{text:"git switch (-c|-C) <new-branch>"}}),t._v(" "),e("p",[e("code",[t._v("main")]),t._v(" 브랜치에서 "),e("code",[t._v("add-color")]),t._v(" 브랜치를 만듭니다.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("브랜치 생성")]),t._v(" "),e("p",[t._v("새 브랜치를 만들 때, 현재 브랜치의 상태를 기준으로 만들기 때문에 현재 브랜치가 무엇인지 꼭 확인해야 합니다.")])]),t._v(" "),e("p",[e("strong",[t._v("작업")])]),t._v(" "),e("ol",[e("li",[t._v("앞에서 실습한 4개의 커밋이 있는 저장소에서 "),e("code",[t._v("-c")]),t._v(" 옵션으로 "),e("code",[t._v("add-color")]),t._v(" 브랜치를 생성하면서 이동")])]),t._v(" "),e("p",[e("strong",[t._v("실습")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git checkout -b add-color # 예전 Git 버전 명령어")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" switch -c add-color "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gsw -c add-color")]),t._v("\n")])])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("`-c` 옵션")]),t._v(" "),e("p",[t._v("git switch의 "),e("code",[t._v("-c")]),t._v(" 옵션은 브랜치 생성과 브랜치 이동을 한번에 수행합니다. 다음 명령어와 동일합니다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch add-color\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" swtich add-color\n")])])])]),t._v(" "),e("p",[e("strong",[t._v("결과")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Switched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add-color'")]),t._v("\n")])])]),e("ul",[e("li",[t._v("기존 "),e("code",[t._v("main")]),t._v(" 브랜치의 작업 공간과 동일한 "),e("code",[t._v("add-color")]),t._v(" 브랜치를 생성하면서 이동")]),t._v(" "),e("li",[t._v("쉘 프롬프트가 "),e("code",[t._v("➜ sample git:(main)")]),t._v("에서 "),e("code",[t._v("➜ sample git:(add-color)")]),t._v("로 변경")])]),t._v(" "),e("h2",{attrs:{id:"add-color-브랜치에서-작업"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-color-브랜치에서-작업"}},[t._v("#")]),t._v(" add-color 브랜치에서 작업")]),t._v(" "),e("p",[t._v("새 브랜치에서 새 커밋을 작성합니다.")]),t._v(" "),e("p",[e("strong",[t._v("작업")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("green")]),t._v(", "),e("code",[t._v("blue")]),t._v(" 파일 추가")]),t._v(" "),e("li",[t._v("전체 변경사항을 인덱스에 추가")]),t._v(" "),e("li",[t._v("커밋 작성")])]),t._v(" "),e("p",[e("strong",[t._v("실습")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" green blue\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"녹색"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" green\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"파랑"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" blue\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gaa")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add green, blue"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# gc -m "add green, blue"')]),t._v("\n")])])]),e("p",[e("strong",[t._v("결과")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("add-color 1b528c8"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" green, blue\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" files changed, "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" insertions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" blue\n create mode "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" green\n")])])]),e("h2",{attrs:{id:"git-switch-브랜치-변경"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-switch-브랜치-변경"}},[t._v("#")]),t._v(" git switch - 브랜치 변경")]),t._v(" "),e("p",[e("code",[t._v("add-color")]),t._v(" 브랜치에서 진행한 작업이 기존 "),e("code",[t._v("main")]),t._v(" 브랜치와 독립적인 것을 확인합니다.")]),t._v(" "),e("p",[e("strong",[t._v("작업")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("main")]),t._v(" 브랜치로 이동")])]),t._v(" "),e("p",[e("strong",[t._v("실습")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git checkout main # 예전 Git 버전 명령어")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" switch main "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gsw main, gsw 한칸 띄고 <tab>을 눌러보세요")]),t._v("\n")])])]),e("p",[e("strong",[t._v("결과")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Switched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'main'")]),t._v("\n")])])]),e("ul",[e("li",[t._v("쉘 프롬프트가 "),e("code",[t._v("➜ sample git:(add-color)")]),t._v("에서 "),e("code",[t._v("➜ sample git:(main)")]),t._v("로 변경")]),t._v(" "),e("li",[e("code",[t._v("add-color")]),t._v(" 브랜치에서 추가한 "),e("code",[t._v("green")]),t._v(", "),e("code",[t._v("blue")]),t._v(" 파일이 사라지고 이전 상태로 돌아온 것을 확인")])]),t._v(" "),e("h2",{attrs:{id:"update-red-브랜치-추가"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update-red-브랜치-추가"}},[t._v("#")]),t._v(" update-red 브랜치 추가")]),t._v(" "),e("p",[e("strong",[t._v("작업")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("update-red")]),t._v(" 브랜치 생성 후 이동")]),t._v(" "),e("li",[e("code",[t._v("red")]),t._v(" 파일 내용 변경")]),t._v(" "),e("li",[t._v("전체 변경사항을 인덱스에 추가")]),t._v(" "),e("li",[t._v("커밋 작성")])]),t._v(" "),e("p",[e("strong",[t._v("실습")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git checkout -b update-red # 예전 Git 버전 명령어")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" switch -c update-red "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gsw -c update-red")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"붉은색"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" red\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gaa")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update red"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# gc -m "update red"')]),t._v("\n")])])]),e("p",[e("strong",[t._v("결과")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Switched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'update-red'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("update-red 57ca6bc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" update red\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" insertion"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" deletion"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("strong",[t._v("현재 브랜치 상황")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("main")]),t._v(": "),e("code",[t._v("red")]),t._v(", "),e("code",[t._v("orange")]),t._v(", "),e("code",[t._v("yellow")])]),t._v(" "),e("li",[e("code",[t._v("add-color")]),t._v(": "),e("code",[t._v("red")]),t._v(", "),e("code",[t._v("orange")]),t._v(", "),e("code",[t._v("yellow")]),t._v(", "),e("code",[t._v("green")]),t._v(", "),e("code",[t._v("blue")])]),t._v(" "),e("li",[e("code",[t._v("update-red")]),t._v(": "),e("code",[t._v("red(변경)")]),t._v(", "),e("code",[t._v("orange")]),t._v(", "),e("code",[t._v("yellow")])])]),t._v(" "),e("h2",{attrs:{id:"git-merge-브랜치-합치기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-브랜치-합치기"}},[t._v("#")]),t._v(" git merge - 브랜치 합치기")]),t._v(" "),e("usage",{attrs:{text:"git merge [<commit>…​]"}}),t._v(" "),e("p",[e("code",[t._v("add-color")]),t._v("에서 작업한 내용을 "),e("code",[t._v("main")]),t._v("에 합칩니다."),e("br"),t._v(" "),e("code",[t._v("add-color")]),t._v("와 "),e("code",[t._v("main")]),t._v(" 브랜치의 차이는 "),e("code",[t._v("green")]),t._v("과 "),e("code",[t._v("blue")]),t._v(" 파일이 추가된 것인데, Git은 동일한 파일을 수정하지 않으면 자동으로 머지합니다. 같은 파일을 수정했더라도 서로 다른 줄을 수정하면 자동 머지 되는데 참 똑똑합니다.")]),t._v(" "),e("p",[e("strong",[t._v("작업")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("main")]),t._v(" 브랜치로 이동")]),t._v(" "),e("li",[e("code",[t._v("add-color")]),t._v(" 브랜치의 수정사항을 "),e("code",[t._v("main")]),t._v(" 브랜치로 머지")]),t._v(" "),e("li",[t._v("전체 커밋 메시지 확인")])]),t._v(" "),e("p",[e("strong",[t._v("실습")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" switch main "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gsw main")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge add-color "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gm add-color")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n")])])]),e("p",[e("strong",[t._v("결과")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Merge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recursive'")]),t._v(" strategy.\n blue  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" +\n green "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" +\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" files changed, "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" insertions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" blue\n create mode "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" green\n")])])]),e("ul",[e("li",[e("code",[t._v("add-color")]),t._v("에서 작업한 내용(파일 추가)이 "),e("code",[t._v("main")]),t._v(" 브랜치로 머지됨")]),t._v(" "),e("li",[e("code",[t._v("main")]),t._v(" 브랜치에 "),e("code",[t._v("green")]),t._v(", "),e("code",[t._v("blue")]),t._v(" 파일이 추가된 것을 확인")]),t._v(" "),e("li",[e("code",[t._v("add-color")]),t._v("에서 작성한 커밋 로그가 "),e("code",[t._v("main")]),t._v(" 브랜치에도 추가된 것 확인")]),t._v(" "),e("li",[t._v("첫번째 머지 축하합니다. 🎉")])]),t._v(" "),e("h2",{attrs:{id:"conflict-충돌-해결"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conflict-충돌-해결"}},[t._v("#")]),t._v(" conflict - 충돌 해결")]),t._v(" "),e("p",[t._v("지금까지 1. 브랜치를 만들고 2. 해당 브랜치에서 커밋을 하고 3. 다른 브랜치와 머지하는 작업을 진행했습니다."),e("br"),t._v("\n대부분 협업을 할때 서로 다른 작업을 하므로 보통 문제없이 자동으로 머지됩니다. "),e("strong",[t._v("하지만,")]),t._v(" 같은 파일을 부득이 수정하는 경우가 생기고 필연적으로 충돌이 발생하는데, 강제로 상황을 만들고 충돌을 해결하는 방법을 알아보겠습니다.")]),t._v(" "),e("p",[e("code",[t._v("update-red")]),t._v(" 브랜치에서 수정한 "),e("code",[t._v("red")]),t._v(" 파일을 "),e("code",[t._v("main")]),t._v(" 브랜치에서도 수정하여 충돌 상황을 만듭니다.")]),t._v(" "),e("p",[e("strong",[t._v("작업")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("main")]),t._v(" 브랜치에서 "),e("code",[t._v("red")]),t._v(" 파일 수정")]),t._v(" "),e("li",[t._v("전체 변경사항을 인덱스에 추가")]),t._v(" "),e("li",[t._v("커밋 작성")]),t._v(" "),e("li",[e("code",[t._v("update-red")]),t._v(" 브랜치를 "),e("code",[t._v("main")]),t._v("으로 머지")])]),t._v(" "),e("p",[e("strong",[t._v("실습")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"뻘건색"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" red\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gaa")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update red color"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# gc -m "update red color"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge update-red "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gm update-red")]),t._v("\n")])])]),e("p",[e("strong",[t._v("결과")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Auto-merging red\nCONFLICT "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Merge conflict "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" red\nAutomatic merge failed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" fix conflicts and "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" commit the result.\n")])])]),e("ul",[e("li",[e("code",[t._v("CONFLICT")]),t._v("라는 메시지와 함께 실패(failed)")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("CONFLICT")]),t._v(" "),e("p",[t._v("충돌은 정말 마주치고 싶지 않은 상황입니다. 하지만, 상황이 발생했으면 해결을 해야겠죠."),e("br"),t._v("\n충돌을 해결하고 커밋을 하거나, 머지 작업을 취소("),e("code",[t._v("git merge --abort")]),t._v(")할 수 있습니다.")])]),t._v(" "),e("p",[e("strong",[t._v("red 파일 내용")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<<<<<<< HEAD\n뻘건색\n=======\n붉은색\n>>>>>>> update-red\n")])])]),e("p",[t._v("충돌이 발생하면 양쪽 브랜치에서 동시에 변경된 사항을 표시해 줍니다. "),e("code",[t._v("<<<<<<<")]),t._v(", "),e("code",[t._v("=======")]),t._v(", "),e("code",[t._v(">>>>>>>")]),t._v(" 이 내용이 충돌이 발생한 지점을 의미합니다.")]),t._v(" "),e("p",[t._v("위에 내용은 "),e("code",[t._v("main")]),t._v(" 브랜치에서 작업한 내용이고 아래 내용은 "),e("code",[t._v("update-red")]),t._v(" 브랜치에서 작업한 내용이네요. 둘중에 어떤 내용이 맞는지 개발자가 스스로 판단하고 선택해야 합니다.")]),t._v(" "),e("p",[t._v("여기선, "),e("code",[t._v("붉은색")]),t._v("만 남기고 다른 줄을 삭제합니다. "),e("code",[t._v("<<<<<<<")]),t._v(", "),e("code",[t._v("뻘건색")]),t._v(", "),e("code",[t._v("=======")]),t._v(", "),e("code",[t._v(">>>>>>>")]),t._v("를 모두 제거합니다.")]),t._v(" "),e("p",[t._v("충돌을 해결했다면 기존과 동일한 방식으로 커밋을 진행합니다. 차이점은 "),e("code",[t._v("git commit")]),t._v("에서 "),e("code",[t._v("-m")]),t._v(" 메시지를 입력하지 않는다는 점입니다. 충돌을 수정한 내용을 자동으로 메시지로 만들기 때문에 따로 입력하지 않아도 됩니다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gaa")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gc")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("vi 창이 열리고 메시지를 입력하는 화면이 나오면 당황하지말고 "),e("code",[t._v("ecs")]),t._v("키를 누르고 "),e("code",[t._v(":x")]),t._v("를 차례로 입력한 다음 엔터를 칩니다.")])]),t._v(" "),e("p",[e("strong",[t._v("결과")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[main bb77c83] Merge branch 'update-red'\n")])])]),e("p",[t._v("충돌을 해결하고 머지되었습니다! 🎉")]),t._v(" "),e("h2",{attrs:{id:"gui-도구-사용하기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gui-도구-사용하기"}},[t._v("#")]),t._v(" GUI 도구 사용하기")]),t._v(" "),e("p",[t._v("지금까지 작업을 "),e("code",[t._v("Visual Studio Code")]),t._v("와 "),e("code",[t._v("Sourcetree")]),t._v("로 해보고 어떤 장점이 있는지 확인해 보겠습니다.")]),t._v(" "),e("h3",{attrs:{id:"visual-studio-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#visual-studio-code"}},[t._v("#")]),t._v(" Visual Studio Code")]),t._v(" "),e("p",[t._v("현재 브랜치가 무엇인지 확인하고 새 브랜치를 생성합니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(449),alt:"git switch"}})]),t._v(" "),e("p",[t._v("왼쪽밑에 현재 브랜치명인 "),e("code",[t._v("main")]),t._v("을 누르고 "),e("code",[t._v("+ Create new branch...")]),t._v("를 선택합니다. "),e("code",[t._v("add-color")]),t._v(" 를 입력하면, 새 브랜치가 생성되고 해당 브랜치로 이동합니다.")]),t._v(" "),e("p",[t._v("이제 "),e("code",[t._v("add-color")]),t._v(" 브랜치에서 앞에서 실습한 커밋을 추가합니다. 커밋을 추가했으면, 다시 "),e("code",[t._v("main")]),t._v(" 브랜치로 돌아와 봅시다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(450),alt:"git switch"}})]),t._v(" "),e("p",[t._v("왼쪽밑에 현재 브랜치명인 "),e("code",[t._v("add-color")]),t._v("를 누르고 "),e("code",[t._v("main")]),t._v("을 선택합니다. 브랜치가 많아질수록 브랜치 이름을 외울 수 없고 브랜치를 이동할 때 정확하게 브랜치명을 입력해야 하는데, CLI 보다는 이렇게 눈으로 확인하고 클릭하는 것이 더 편하고 정확합니다. 언제든 클릭 몇 번으로 브랜치를 손쉽게 이동할 수 있습니다.")]),t._v(" "),e("p",[t._v("이제 "),e("code",[t._v("add-color")]),t._v(" 브랜치의 변경사항을 "),e("code",[t._v("main")]),t._v("에 머지합니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(451),alt:"git merge"}})]),t._v(" "),e("p",[e("code",[t._v("Source Control")]),t._v("에서 "),e("code",[t._v("BRANCHES 탭")]),t._v("을 선택하고 "),e("code",[t._v("add-color")]),t._v(" 브랜치에서 오른쪽 버튼 클릭 후 "),e("code",[t._v("Merge Branch into Current Branch...")]),t._v("를 선택합니다. 머지 옵션이 뜨는데 기본값 "),e("code",[t._v("Merge")]),t._v("를 선택합니다. 머지 완료!")]),t._v(" "),e("p",[t._v("그럼, 충돌 상황을 만들고 해결해 봅니다. "),e("code",[t._v("update-red")]),t._v(" 브랜치를 만들고 파일을 수정한다음에 "),e("code",[t._v("main")]),t._v(" 브랜치로 돌아옵니다.")]),t._v(" "),e("p",[e("code",[t._v("BRANCHES 탭")]),t._v("을 선택하고 "),e("code",[t._v("update-red")]),t._v(" 브랜치에서 오른쪽 버튼 클릭 후 "),e("code",[t._v("Merge")]),t._v("를 선택합니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(452),alt:"git conflict"}})]),t._v(" "),e("p",[t._v("충돌난 파일이 보이고, 어떤 브랜치의 수정사항을 고를지 선택하는 버튼도 보입니다. 내용을 수정하고 저장합니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(453),alt:"git conflict"}})]),t._v(" "),e("p",[t._v("수정이 완료되면 "),e("code",[t._v("+")]),t._v("를 누르고 "),e("code",[t._v("체크버튼")]),t._v("을 선택하여 커밋합니다. 머지 완료!")]),t._v(" "),e("h3",{attrs:{id:"source-tree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#source-tree"}},[t._v("#")]),t._v(" Source Tree")]),t._v(" "),e("p",[e("img",{attrs:{src:a(454),alt:"git switch"}})]),t._v(" "),e("p",[t._v("상단 메뉴에서 "),e("code",[t._v("Branch")]),t._v("를 선택합니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(455),alt:"git switch"}})]),t._v(" "),e("p",[t._v("새로 뜨는 팝업에서 "),e("code",[t._v("add-color")]),t._v(" 입력 후 "),e("code",[t._v("Create Branch")]),t._v(" 클릭합니다.")]),t._v(" "),e("p",[t._v("이제 "),e("code",[t._v("add-color")]),t._v(" 브랜치에서 앞에서 실습한 커밋을 추가합니다. 커밋을 추가했으면, 다시 "),e("code",[t._v("main")]),t._v(" 브랜치로 돌아와 봅시다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(456),alt:"git switch"}})]),t._v(" "),e("p",[t._v("왼쪽 메뉴에서 "),e("code",[t._v("Branch")]),t._v("를 확장하고 "),e("code",[t._v("main")]),t._v("을 더블클릭합니다. 언제든 브랜치명을 더블 클릭하면 자유롭게 브랜치를 이동할 수 있습니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(457),alt:"git merge"}})]),t._v(" "),e("p",[t._v("왼쪽 메뉴에서 "),e("code",[t._v("Branch")]),t._v("를 확장하고 "),e("code",[t._v("add-color")]),t._v("에서 오른쪽 버튼 클릭 후 "),e("code",[t._v("Merge add-color into main")]),t._v("를 선택합니다. 머지 완료!")]),t._v(" "),e("p",[t._v("그럼, 충돌 상황을 만들고 해결해 봅니다. "),e("code",[t._v("update-red")]),t._v(" 브랜치를 만들고 파일을 수정한다음에 "),e("code",[t._v("main")]),t._v(" 브랜치로 돌아옵니다.")]),t._v(" "),e("p",[e("code",[t._v("update-red")]),t._v(" 브랜치에서 오른쪽 버튼 누르고 "),e("code",[t._v("Merge")]),t._v("를 선택합니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(458),alt:"git conflict"}})]),t._v(" "),e("p",[t._v("충돌 발생한 "),e("code",[t._v("red")]),t._v(" 파일 내용을 볼 수 있습니다. 해당 파일을 더블 클릭하거나 에디터로 열어서 편집합니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(459),alt:"git conflict"}})]),t._v(" "),e("p",[t._v("메모장에서 "),e("code",[t._v("붉은색")]),t._v("만 남기고 지운 다음 저장합니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(460),alt:"git conflict"}})]),t._v(" "),e("p",[t._v("수정이 완료되면 Stage에 추가하고 "),e("code",[t._v("Commit")]),t._v(" 버튼을 클릭합니다. 머지 완료!")]),t._v(" "),e("h2",{attrs:{id:"그래서"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#그래서"}},[t._v("#")]),t._v(" 그래서")]),t._v(" "),e("p",[t._v("Git에서 제공하는 강력한 브랜치 기능을 실습했습니다. 이제 자유롭게 브랜치를 만들고 작업하고 머지할 수 있습니다.")]),t._v(" "),e("p",[t._v("대부분의 에디터에서 메인 화면 한쪽 구석에 브랜치명을 표시해 줍니다. 현재 어떤 브랜치에서 작업하고 있는지 인지하는 것이 중요하고 필요하면 언제든 빠르게 변경할 수 있도록 보기 좋은 곳에 표시합니다. CLI를 쓰는 것도 좋지만 이렇게 편한 위치에 있는 기능을 쓰면 생산성에 도움이 되겠죠?")])],1)}),[],!1,null,null,null);s.default=v.exports}}]);